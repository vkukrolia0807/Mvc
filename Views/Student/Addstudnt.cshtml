@model Student_mgmt_Model.Models.Studentcustom

@{
    ViewBag.Title = "Addstudent";

}
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Mno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mno, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.Mno, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.gender, "Male") Male
                @Html.ValidationMessageFor(model => model.gender)

                @Html.RadioButtonFor(model => model.gender, "Female") Female
                @Html.ValidationMessageFor(model => model.gender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2", @id = "CountryId" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.country, ViewBag.CountryName as SelectList
               , "Select Country", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2", @id = "StateId" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.state, ViewBag.StateName as SelectList
              , "Select Country", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2", @id = "CityId" })


            <div class="col-md-10">
                @Html.DropDownListFor(model => model.city, ViewBag.CityName as SelectList
              , "Select Country", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                <div class="col-md-10">

                    @Html.LabelFor(model => model.teacher, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownListFor(model => model.teacher, ViewBag.TeacherName as SelectList, "select teacherName", new { @class = "form-control", @multiple = "multiple" })
                    @Html.ValidationMessageFor(model => model.teacher, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>
        </div>

    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(document).ready(function () {
        $("#teacher").select2();
    });
    $.ajax({
        type: "GET",
        url: "/Citystatecountry/GetCountries",
        success: function (data) {
            $.each(data, function (index, Country) {
                
                $('#country').append('<option value="' + Country.countryID + '">' + Country.Country + '</option>');

            });
        }
    });
    
    // Populate State dropdown on Country change
    $('#country').change(function () {
        var countryID = $('#country').val();
      
        $('#state').empty();
        $('#city').empty();
    
        $.ajax({
            type: "GET",
            url: "/Citystatecountry/GetStates",
           data: { countryID: countryID },
            success: function (data) {
                $.each(data, function (index, state) {
                    $('#state').append('<option value="' + state.StateId + '">' + state.StateName + '</option>');
                    
                });
            }
        });
    });

    // Populate City dropdown on State change
    $('#state').change(function () {
        var stateID = $('#state').val();
        $('#city').empty();
        $.ajax({
            type: "GET",
            url: "/Citystatecountry/GetCities",
            data: { stateID: stateID },
            success: function (data) {
                $.each(data, function (index, city) {
                   
                    $('#city').append('<option value="' + city.CityId + '">' + city.CityName + '</option>');
                });
            }
        });
    });


</script>
<script src="~/bundles/jqueryval"></script>